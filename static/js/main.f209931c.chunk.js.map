{"version":3,"sources":["logo.png","Components/BottomBar/BottomBar.js","Components/NavigationBar/NavigationBar.js","Components/Title/Title.js","Components/Sound/Sound.js","Components/Picture/Picture.js","Components/SoundDec/SoundDec.js","Components/Video/Video.js","Components/VideoDec/VideoDec.js","Components/Routes/Router.js","global.js","theme.js","Components/switch.js","App.js","useDarkMode.js","serviceWorker.js","index.js","backend/extendedVigenere.js","backend/util/string.js"],"names":["module","exports","BottomBar","className","href","Component","NavigationBar","to","color","Title","Fragment","src","logo","alt","width","seedrandom","require","ExtVigenere","string","truncate","input","length","substr","shuffle","array","seed","tmp","seedNum","l","myrng","i","Math","abs","int32","fileReader","URLReader","fileData","targetData","Sound","state","key","steganoName","selectedFile","undefined","steganoSrc","soundSrc","fileType","fileName","injectedFile","injectedFileName","text","off","dataSize","randomize","onKeyChange","e","setState","target","value","onNameChange","onTextChange","event","onRandChange","onTargetChange","files","name","FileReader","onloadend","handleTargetRead","readAsArrayBuffer","onFileChange","type","handleFileRead","URL","createObjectURL","a","typedArray","Uint8Array","result","console","log","readDataSize","handleEncrypt","preventDefault","floor","alert","endbyte","startbyte","offset","encrypt","nBytes","nLen","fBytes","fLen","ArrName","toASCII","concat","push","bits","toString","j","parseInt","charAt","downloadExtended","content","element","document","createElement","file","Blob","url","download","body","appendChild","click","remove","dataArray","found","getElementById","style","display","onSubmit","this","id","placeholder","disabled","rows","onChange","htmlFor","icon","checked","accept","controls","CanvasToBMP","toArrayBuffer","canvas","x","p","v","w","h","height","w4","idata","getContext","getImageData","data32","Uint32Array","data","buffer","stride","pixelArraySize","fileLength","ArrayBuffer","view","DataView","pos","y","s","setU16","setU32","setUint32","setUint16","toBlob","toDataURL","bs","String","fromCharCode","btoa","Picture","pictureSrc","injectedFileType","extension","bpcs","onBPCSChange","onInjectedFileNameChange","findAmplifiedMinified","max","checkerBoardMake","checkerBoard","handleURLRead","readAsDataURL","constructBitMap","ctx","bitMap","imgData","bitR","bitG","bitB","bitTot","k","evaluateComplexity","arrayOfBits","Mat","sum1","sum2","analyzeAndHide","message","ordered","chunk","rng","limit","q","conj","o","filled","row","round","assembleResult","c","iters","r","g","b","putImageData","dest","img","c2","bit","ctx3","drawImage","bmpBlob","ctx2","txt","charCodeAt","listX","listY","imgOld","cOld","ctxOld","sumTotal","imgData1","imgData2","pow","psnr","log10","sqrt","handleDecrypt","temp","flagXORed","amp","res","substring","decrypt","ext","split","reverse","join","im","blob","imageUrl","window","webkitURL","onClick","closeModal","deshuffle","num","pop","SoundDec","dis","readOnly","hidden","Video","videoSrc","movi","seqArray","VideoDec","slice","indexOf","Router","exact","path","render","component","GlobalStyles","createGlobalStyle","theme","filter","lightTheme","toggleBorder","gradient","darkTheme","Switch","toggleTheme","isLight","library","add","faLock","faLockOpen","faUnlock","faFile","faFileUpload","faCloudDownloadAlt","faTimesCircle","App","useState","setTheme","componentMounted","setComponentMounted","setMode","mode","localStorage","setItem","useEffect","localTheme","getItem","matchMedia","matches","useDarkMode","themeMode","lineColor","params","particles","number","line_linked","shadow","enable","blur","interactivity","events","onhover","onclick","basename","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","plaintext","P","K","mod","ciphertext","C","isString","removeNonAlphabet","replace","toUpperCase","removeNonAlphabetException","removeNonAlphabetHill","removeDuplicates","char","self","replaceCharacters","search","regex","RegExp","toNumbers","out","toNumbersException","toNumbersHill","toAlphabet","toAlphabetHill","modInverse","m","n","NaN","bigram","tempDigram","formatOutput"],"mappings":"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","file":"static/js/main.f209931c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2fc24170.png\";","import React, { Component } from \"react\";\nimport \"./BottomBar.css\";\n\nclass BottomBar extends Component {\n  render() {\n    return (\n      <div className=\"bottombar\">\n        <div className=\"bottombar-wrapper\">\n          <footer>\n            Copyright &copy; 2020 -&nbsp; Frontend based on \n            <a className=\"bottombar-a\" href=\"https://github.com/vincentbudianto/Crypto-Helper\"> Crypto Helper</a>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BottomBar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./NavigationBar.css\";\n\nclass NavigationBar extends Component {\n  render() {\n    return (\n      <div className=\"navbar\">\n        <div className=\"navbar-wrapper\">\n          <Link className=\"navbar-a\" to=\"/title\">\n            <div className=\"navbar-button\">\n              <font color=\"white\">Home</font>\n            </div>\n          </Link>\n\n          <Link className=\"navbar-a\" to=\"/sound\">\n            <div className=\"navbar-button\">\n              <font color=\"white\">Audio Encryption</font>\n            </div>\n          </Link>\n\n          <Link className=\"navbar-a\" to=\"/sound-dec\">\n            <div className=\"navbar-button\">\n              <font color=\"white\">Audio Decryption</font>\n            </div>\n          </Link>\n\n          <Link className=\"navbar-a\" to=\"/video\">\n            <div className=\"navbar-button\">\n              <font color=\"white\">Video Encryption</font>\n            </div>\n          </Link>\n\n          <Link className=\"navbar-a\" to=\"/video-dec\">\n            <div className=\"navbar-button\">\n              <font color=\"white\">Video Decryption</font>\n            </div>\n          </Link>\n\n          \n          <Link className=\"navbar-a\" to=\"/picture\">\n            <div className=\"navbar-button\">\n              <font color=\"white\">Picture</font>\n            </div>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NavigationBar;\n","import React, { Component } from \"react\";\nimport logo from \"../../logo.png\";\nimport \"./Title.css\";\n\nclass Title extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"wrapper-title\">\n          <div>\n            <img src={logo} className=\"logo\" alt=\"logo\" width=\"40%\" />\n          </div>\n\n          <div className=\"text-title1\">Crypto Helper</div>\n\n          <div className=\"text-title2\">Encryption and Decryption Tools</div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\n// import Select from \"react-select\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Sound.css\";\nvar seedrandom = require('seedrandom');\n// import { text } from \"@fortawesome/fontawesome-svg-core\";\n\nlet ExtVigenere = require(\"../../backend/extendedVigenere\");\nlet string = require('../../backend/util/string')\n\nconst truncate = (input) => {\n  return (input.length > 10) ? input.substr(0, 9) + '...' : input;\n}\n\n// http://stackoverflow.com/questions/962802#962890\nfunction shuffle(array, seed) {\n  var tmp, l = array.length;\n  var myrng = new seedrandom(seed);\n  let seedNum;\n  for (var i=0; i<array.length; i++) {\n    seedNum = Math.abs(myrng.int32());\n    tmp = array[seedNum % l];\n    array[seedNum % l] = array[i];\n    array[i] = tmp;\n  }\n  return array;\n}\n\nlet fileData = [];\nlet targetData = [];\n\nlet fileReader;\n\nclass Sound extends Component {\n  state = {\n    key: \"\",\n    steganoName: \"\",\n    selectedFile: undefined,\n    steganoSrc: \"\",\n    soundSrc: \"\",\n    fileType: \"\",\n    fileName: \"\",\n    injectedFile: undefined,\n    injectedFileName: \"\",\n    text: \"\",\n    off: 0,\n    dataSize: 0,\n    randomize: false\n  }\n\n  onKeyChange = (e) => {\n    this.setState({ key: e.target.value })\n  }\n\n  onNameChange = (e) => {\n    this.setState({ steganoName: e.target.value })\n  }\n\n  onTextChange = event => {\n    this.setState({ text: event.target.value });\n  }\n\n  onRandChange = (e) => {\n    this.setState({ randomize: !this.state.randomize })\n  }\n\n  // On target select (from the pop up)\n  onTargetChange = event => {\n    if (event.target.files[0] !== undefined) {\n      this.setState({ injectedFile: event.target.files[0] });\n      this.setState({ injectedFileName: event.target.files[0].name });\n      if (event.target.files[0] !== undefined) {\n        fileReader = new FileReader();\n        fileReader.onloadend = this.handleTargetRead;\n        fileReader.readAsArrayBuffer(event.target.files[0]);\n      }\n    }\n  }\n\n  // On file select (from the pop up)\n  onFileChange = event => {\n    if (event.target.files[0] !== undefined) {\n      this.setState({ selectedFile: event.target.files[0]});\n      this.setState({ fileName: event.target.files[0].name });\n      this.setState({ fileType: event.target.files[0].type });\n      if (event.target.files[0] !== undefined) {\n        fileReader = new FileReader();\n        fileReader.onloadend = this.handleFileRead;\n        fileReader.readAsArrayBuffer(event.target.files[0]);\n        this.setState({ soundSrc: URL.createObjectURL(event.target.files[0]) });\n      }\n    }\n  }\n\n  handleFileRead = async (e) => {\n    // console.log(this.state.fileType)\n    // console.log(content)\n    const typedArray = new Uint8Array(fileReader.result);\n    // console.log(typedArray)\n\n    fileData = [...typedArray];\n    console.log(fileData);\n    \n    this.readDataSize(fileData);\n    \n    // const encryptedBuffer = new Uint8Array(encrypted);\n    \n    // this.downloadExtended(encryptedBuffer);\n    // this.setState({ soundSrc: content })\n  }\n\n  handleTargetRead = async (e) => {\n    const typedArray = new Uint8Array(fileReader.result);\n    targetData = [...typedArray];\n  }\n\n  handleEncrypt = async (e) => {\n    e.preventDefault();\n    \n    // Start file steganography\n    if (this.state.injectedFile !== undefined && this.state.selectedFile !== undefined) {\n      let name = this.state.injectedFileName;\n\n      // If message is too long, do nothing\n      if (name.length + targetData.length > Math.floor(((this.state.dataSize/8)-10))) {\n        alert(\"File too long!\");\n        return;\n      }\n\n      // Setup variables\n      let array = targetData;\n      let endbyte = 0;\n      let startbyte = 1;\n      let offset = this.state.off;\n      \n      // Randomize array\n      if (this.state.randomize) { \n        endbyte = 1;\n        array = shuffle(array, this.state.key);\n      }\n\n      // Encrypts array\n      array = ExtVigenere.encrypt(array, this.state.key);\n\n      // Adds info about name length, name, and file length\n      var nLen, fLen, nBytes, fBytes, i = 0;\n      nBytes = [0, 0, 0, 0]; nLen = name.length;\n      while (nLen > 0 && i < 4) {\n        console.log(\"nLen: \" + nLen);\n        nBytes[i] += nLen % 256;\n        i++; nLen = Math.floor(nLen / 256);\n      }\n      console.log(nBytes);\n      i = 0;\n      fBytes = [0, 0, 0, 0]; fLen = array.length;\n      while (fLen > 0 && i < 4) {\n        console.log(\"fLen: \" + nLen);\n        fBytes[i] += fLen % 256;\n        i++; fLen = Math.floor(fLen / 256);\n      }\n      console.log(fBytes);\n\n      var ArrName = string.toASCII(name);\n      array = nBytes.concat(ArrName).concat(fBytes).concat(array);\n      console.log(array);\n\n      // Push extra bytes\n      array.push(endbyte);\n      array = [startbyte].concat(array);\n\n      // Put each bit into audio\n      for (i = 0; i < array.length; i++) {\n        let bits = array[i].toString(2);\n        bits = \"00000000\".substr(bits.length) + bits;\n        for (var j = 0; j < 8; j++) {\n          fileData[offset+(i*8)+j] &= 254;\n          fileData[offset+(i*8)+j] += parseInt(bits.charAt(j));\n        }\n      }\n      \n      // Download audio\n      const typedArray = new Uint8Array(fileData);\n      console.log(typedArray);\n      this.downloadExtended(typedArray);\n    }\n    // Start text steganography\n    else if (this.state.text !== \"\" && this.state.selectedFile !== undefined) {\n      // If message is too long, do nothing\n      if (this.state.text.length > Math.floor(((this.state.dataSize/8)-2))) {\n        alert(\"Message too long!\");\n        return;\n      }\n\n      // Setup variables\n      let array = string.toASCII(this.state.text);\n      let endbyte = 0;\n      let startbyte = 0;\n      let offset = this.state.off;\n      \n      // Randomize array\n      if (this.state.randomize) { \n        endbyte = 1;\n        array = shuffle(array, this.state.key);\n      }\n\n      // Encrypts text into array of ASCII\n      array = ExtVigenere.encrypt(array, this.state.key);\n      \n      // Push extra bytes\n      array.push(endbyte);\n      array = [startbyte].concat(array);\n\n      console.log(fileData);\n      \n      // Put each bit into audio\n      for (i = 0; i < array.length; i++) {\n        let bits = array[i].toString(2);\n        bits = \"00000000\".substr(bits.length) + bits;\n        for (j = 0; j < 8; j++) {\n          fileData[offset+(i*8)+j] &= 254;\n          fileData[offset+(i*8)+j] += parseInt(bits.charAt(j));\n        }\n      }\n      \n      // Download audio\n      const typedArray = new Uint8Array(fileData);\n      // console.log(typedArray);\n      this.downloadExtended(typedArray);\n    } else {\n      alert(\"Text is empty or no sound file!\");\n    }\n  }\n\n  downloadExtended = async (content) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([content], {\n      type: this.state.fileType,\n    });\n\n    element.className = \"download-file\";\n    let url = URL.createObjectURL(file);\n    this.setState({ steganoSrc: url })\n    element.href = url; \n    element.download = this.state.steganoName;\n    document.body.appendChild(element);\n    element.click();\n    element.remove();\n  }\n\n  readDataSize = async (dataArray) => {\n    let offset = 0;\n    var i = 0, found = false;\n    while (i < dataArray.length && !found) {\n      if (dataArray[i] === 100 && dataArray[i+1] === 97 && dataArray[i+2] === 116 && dataArray[i+3] === 97) {\n        found = true;\n      };\n      i++;\n    }\n    offset = i+8;\n    console.log(offset);\n    this.setState({ off: (offset) });\n    this.setState({ dataSize: (dataArray.length - (offset)) });\n\n  }\n\n  closeModal() {\n    document.getElementById(\"modal-result\").style.display = \"none\";\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"wrapper-encrypt\">\n          <div className=\"container-encrypt\">\n            <form className=\"encrypt-form\" onSubmit={this.handleEncrypt}>\n              <label>Text</label>\n              <textarea id=\"text-input\" placeholder={\"Max character: \" + (Math.floor((this.state.dataSize/8) - 2))} disabled={this.state.dataSize === 0}\n                type=\"text\" name=\"text\" rows=\"6\" onChange={this.onTextChange} value={this.state.text}/>\n\n              <input id=\"target-input\" type=\"file\" name=\"target\" className=\"target-button\" onChange={this.onTargetChange} />\n              <label htmlFor=\"target-input\">\n                <FontAwesomeIcon icon={this.state.injectedFileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.injectedFileName === \"\" ? \"Target\" : truncate(this.state.injectedFileName)}\n              </label>\n\n              <label>Key</label>\n              <input id=\"key-input\" placeholder=\"Insert vigenere key here\" type=\"text\" name=\"key\" onChange={this.onKeyChange} value={this.state.key}/>\n\n              <label>Save As...</label>\n              <input id=\"key-input\" placeholder=\"something.wav\" type=\"text\" name=\"key\" onChange={this.onNameChange} value={this.state.steganoName}/>\n\n              <label>Randomize?</label>\n              <input type=\"checkbox\" id=\"rand-input\" name=\"rand-input\" checked={this.state.randomize} onChange={this.onRandChange}/>\n\n              <div className=\"button-container\">\n                <input id=\"file-input\" type=\"file\" accept=\"audio/wav\" name=\"file\" className=\"upload-button\" onChange={this.onFileChange} />\n                <label htmlFor=\"file-input\">\n                  <FontAwesomeIcon icon={this.state.fileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.fileName === \"\" ? \"Upload\" : truncate(this.state.fileName)}\n                </label>\n                <audio id=\"src-sound\" src={this.state.soundSrc} controls={this.state.soundSrc!==\"\"}></audio>\n                <button className=\"encrypt-button\" type=\"submit\">\n                  <FontAwesomeIcon icon=\"lock\" /> &nbsp; Encrypt\n                </button>\n                <audio id=\"stegano-sound\" src={this.state.steganoSrc} controls={this.state.steganoSrc!==\"\"}></audio>\n\n              </div>\n            </form>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Sound;\n","import React, { Component } from \"react\";\n// import Select from \"react-select\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Picture.css\";\n// import { parse } from \"mathjs\";\n// import { text } from \"@fortawesome/fontawesome-svg-core\";\n// import { randomInt } from \"mathjs\";\n\nlet ExtVigenere = require(\"../../backend/extendedVigenere\");\n\nconst truncate = (input) => {\n  return (input.length > 10) ? input.substr(0, 9) + '...' : input;\n}\n\nvar seedrandom = require('seedrandom')\n\nlet fileData = [];\n// Buffer for file message\nlet targetData = [];\n\nlet URLReader;\nlet fileReader;\n\n\n\n\nvar CanvasToBMP = {\n\n  /**\n   * Convert a canvas element to ArrayBuffer containing a BMP file\n   * with support for 32-bit (alpha).\n   *\n   * Note that CORS requirement must be fulfilled.\n   *\n   * @param {HTMLCanvasElement} canvas - the canvas element to convert\n   * @return {ArrayBuffer}\n   */\n  toArrayBuffer: function(canvas) {\n\n    var w = canvas.width,\n        h = canvas.height,\n        w4 = w * 4,\n        idata = canvas.getContext(\"2d\").getImageData(0, 0, w, h),\n        data32 = new Uint32Array(idata.data.buffer), // 32-bit representation of canvas\n\n        stride = Math.floor((32 * w + 31) / 32) * 4, // row length incl. padding\n        pixelArraySize = stride * h,                 // total bitmap size\n        fileLength = 122 + pixelArraySize,           // header size is known + bitmap\n\n        file = new ArrayBuffer(fileLength),          // raw byte buffer (returned)\n        view = new DataView(file),                   // handle endian, reg. width etc.\n        pos = 0, x, y = 0, p, s = 0, a, v;\n\n    // write file header\n    setU16(0x4d42);          // BM\n    setU32(fileLength);      // total length\n    pos += 4;                // skip unused fields\n    setU32(0x7a);            // offset to pixels\n\n    // DIB header\n    setU32(108);             // header size\n    setU32(w);\n    setU32(-h >>> 0);        // negative = top-to-bottom\n    setU16(1);               // 1 plane\n    setU16(32);              // 32-bits (RGBA)\n    setU32(3);               // no compression (BI_BITFIELDS, 3)\n    setU32(pixelArraySize);  // bitmap size incl. padding (stride x height)\n    setU32(2835);            // pixels/meter h (~72 DPI x 39.3701 inch/m)\n    setU32(2835);            // pixels/meter v\n    pos += 8;                // skip color/important colors\n    setU32(0xff0000);        // red channel mask\n    setU32(0xff00);          // green channel mask\n    setU32(0xff);            // blue channel mask\n    setU32(0xff000000);      // alpha channel mask\n    setU32(0x57696e20);      // \" win\" color space\n\n    // bitmap data, change order of ABGR to BGRA\n    while (y < h) {\n      p = 0x7a + y * stride; // offset + stride x height\n      x = 0;\n      while (x < w4) {\n        v = data32[s++];                     // get ABGR\n        a = v >>> 24;                        // alpha channel\n        view.setUint32(p + x, (v << 8) | a); // set BGRA\n        x += 4;\n      }\n      y++\n    }\n\n    return file;\n\n    // helper method to move current buffer position\n    function setU16(data) {view.setUint16(pos, data, true); pos += 2}\n    function setU32(data) {view.setUint32(pos, data, true); pos += 4}\n  },\n\n  /**\n   * Converts a canvas to BMP file, returns a Blob representing the\n   * file. This can be used with URL.createObjectURL().\n   * Note that CORS requirement must be fulfilled.\n   *\n   * @param {HTMLCanvasElement} canvas - the canvas element to convert\n   * @return {Blob}\n   */\n  toBlob: function(canvas) {\n    return new Blob([this.toArrayBuffer(canvas)], {\n      type: \"image/bmp\"\n    });\n  },\n\n  /**\n   * Converts the canvas to a data-URI representing a BMP file.\n   * Note that CORS requirement must be fulfilled.\n   *\n   * @param canvas\n   * @return {string}\n   */\n  toDataURL: function(canvas) {\n    var buffer = new Uint8Array(this.toArrayBuffer(canvas)),\n        bs = \"\", i = 0, l = buffer.length;\n    while (i < l) bs += String.fromCharCode(buffer[i++]);\n    return \"data:image/bmp;base64,\" + btoa(bs);\n  }\n};\n\n\n\nclass Picture extends Component {\n  state = {\n    key: \"\",\n    steganoName: \"\",\n    selectedFile: undefined,\n    steganoSrc: \"\",\n    pictureSrc: \"\",\n    fileType: \"\",\n    fileName: \"\",\n    injectedFile: undefined,\n    injectedFileName: \"\",\n    injectedFileType: \"\",\n    text: \"\",\n    dataSize: 0,\n    extension: \"\",\n    randomize: false,\n    bpcs: false\n  }\n\n  onKeyChange = (e) => {\n    this.setState({ key: e.target.value })\n  }\n\n  onTextChange = event => {\n    this.setState({ text: event.target.value });\n  }\n\n  onNameChange = (e) => {\n    this.setState({ steganoName: e.target.value })\n  }\n\n  onRandChange = (e) => {\n    this.setState({ randomize: !this.state.randomize })\n  }\n\n  onBPCSChange = (e) => {\n    this.setState({ bpcs: !this.state.bpcs })\n  }\n\n  onInjectedFileNameChange = event => {\n    this.setState({ injectedFileName: event.target.value });\n  }\n\n  // On target select (from the pop up)\n  onTargetChange = event => {\n    if (event.target.files[0] !== undefined) {\n      this.setState({ injectedFile: event.target.files[0] });\n      this.setState({ injectedFileName: event.target.files[0].name });\n      if (event.target.files[0] !== undefined) {\n        fileReader = new FileReader();\n        fileReader.onloadend = this.handleTargetRead;\n        fileReader.readAsArrayBuffer(event.target.files[0]);\n      }\n    }\n  }\n\n  findAmplifiedMinified = (x,max) => {\n    if (x < max/2){\n      return x + Math.floor(max/2)\n      }\telse {  \n      return x - Math.floor(max/2)\n      }\n  }\n\n  checkerBoardMake = () => {\n    let checkerBoard = []\n    for (let i = 0; i < 64; i++){\n      if (i % 2 === 0){\n        checkerBoard.push(\"0\")\n      }else{\n        checkerBoard.push(\"1\")\n      }\n    }\n    return checkerBoard\n  }\n  \n\n  // On file select (from the pop up)\n  onFileChange = event => {\n    if (event.target.files[0] !== undefined) {\n      \n      this.setState({ selectedFile: event.target.files[0]});\n      this.setState({ fileName: event.target.files[0].name });\n      this.setState({ fileType: event.target.files[0].type });\n      if (event.target.files[0] !== undefined) {\n        fileReader = new FileReader();\n        fileReader.onloadend = this.handleFileRead;\n        fileReader.readAsArrayBuffer(event.target.files[0]);\n        URLReader = new FileReader();\n        URLReader.onloadend = this.handleURLRead;\n        URLReader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n  handleFileRead = async (e) => {\n    // console.log(this.state.fileType)\n    // console.log(content)\n    const typedArray = new Uint8Array(fileReader.result);\n    console.log(typedArray)\n\n    fileData = [...typedArray];\n    this.readDataSize(fileData);\n\n    // const encryptedBuffer = new Uint8Array(encrypted);\n    \n    // this.downloadExtended(encryptedBuffer);\n    // this.setState({ soundSrc: content })\n  }\n\n  handleTargetRead = async (e) => {\n    const typedArray = new Uint8Array(fileReader.result);\n    targetData = [...typedArray];\n  }\n\n  constructBitMap = (ctx, width, height) => {\n    let bitMap = []\n    //let chunks = Math.ceil((width*height*24)/64)\n    for (let i = 0; i < 24; i++){\n      bitMap.push([])\n    }\n    \n    let x = 0\n\n    for (let i = 0; i < height; i++){\n      for (let j = 0; j < width; j++){\n        let imgData = ctx.getImageData(j,i,1,1)\n        let bitR = imgData.data[0].toString(2)\n        bitR = \"00000000\".substr(bitR.length) + bitR;\n\n        let bitG = imgData.data[1].toString(2)\n        bitG = \"00000000\".substr(bitG.length) + bitG;\n\n        let bitB = imgData.data[2].toString(2)\n        bitB = \"00000000\".substr(bitB.length) + bitB; \n        \n        let bitTot = bitR+bitG+bitB\n        if (bitMap[x*24].length === 64){\n          for (let i = 0; i < 24; i++){\n            bitMap.push([])\n          }\n          x += 1\n        }\n        for (let k = 0; k < 24; k++){\n          bitMap[(x*24)+k].push(bitTot[k])\n        }\n      }\n    }\n    // for (let i = 0; i < bitMap.length; i++){\n    //   if (bitMap[i].length < 64){\n    //     for (let j = 0; j < 64-bitMap[i].length; j++){\n    //       bitMap[i].push(\"0\")\n    //     }\n    //   }\n    // }\n    // for (let i = 0; i < bitMap.length; i++){\n    //   for (let j = 63; j > 0; j--){\n    //     bitMap[i][j] ^= bitMap[i][j-1]\n    //   }\n    // }\n    return bitMap\n  }\n\n  evaluateComplexity = (arrayOfBits) => {\n    let Mat = []\n    for (let k = 0; k < 8; k++){\n      Mat.push([])\n    }\n\n    let x = 0\n    for (let l = 0; l < arrayOfBits.length; l++){\n      if (Mat[x].length === 8){\n        x += 1\n      }\n      Mat[x].push(arrayOfBits[l])\n    }\n\n    let sum1 = 0 \n    let sum2 = 0\n    for (let k = 0; k < 7; k++){\n      for (let l = 0; l < 7; l++){\n        if (Mat[k][l] !== Mat[k][l+1]){\n          sum1 += 1\n        }\n\n        if (Mat[l][k] !== Mat[l+1][k]){\n          sum2 += 1\n        }\n\n      }\n    }\n    let sumTot = sum1*2 + sum2*2\n    return sumTot/112\n  } \n\n  analyzeAndHide = (bitMap, message, ordered, seed = null) => {\n    // let threshold = 0.3\n    let j = 0\n    let s = 0\n    let chunk = 0 \n\n    let checkerBoard = this.checkerBoardMake()\n    let rng = seedrandom(String.toString(seed))\n\n    console.log(message)\n    for (let i = 0; i < message.length; i += 8){\n      if (ordered){\n        while (j < bitMap.length) {\n          if (this.evaluateComplexity(bitMap[j]) > 0.3){\n            console.log(\"in\")\n            let limit = 8 > (message.length-(chunk*8)) ? (message.length-(chunk*8)) : 8\n            for (let p = 0; p < limit; p++){\n              let bits = message[chunk*8+p].toString(2)\n              bits = \"00000000\".substr(bits.length) + bits;\n              for (let q = 0; q < 8; q++){\n                bitMap[j][(8*p)+q] = bits[q]\n              }\n            }\n            j += 1\n            chunk += 1\n            if (this.evaluateComplexity(bitMap[j]) < 0.3) {\n              let conj = this.findAmplifiedMinified(j, bitMap.length-1)\n              for (let o = 0; o < 64; o++){\n                bitMap[j][o] ^= checkerBoard[o]\n                bitMap[conj][o] = bitMap[j][o]\n              }\n            }\n            break          \n          }\n          j += 1\n\n        }\n      } else if (!ordered){\n        \n        let filled = []\n        let row = Math.round(rng() * (Math.floor(bitMap.length/2)))\n        if (row in filled){\n          row = Math.round(rng() * (Math.floor(bitMap.length/2)))\n        }\n        filled.push(row)\n        let limit = 8 > (message.length-(chunk*8)) ? (message.length-(chunk*8)) : 8\n        for (let p = 0; p < limit; p++){\n          let bits = message[chunk*8+p].toString(2)\n          bits = \"00000000\".substr(bits.length) + bits;\n          for (let q = 0; q < 8; q++){\n            bitMap[row][(8*p)+q] = bits[q]\n          }\n        }\n        chunk += 1\n        if (this.evaluateComplexity(bitMap[row]) < 0.3) {\n          let conj = this.findAmplifiedMinified(row, bitMap.length-1)\n          for (let o = 0; o < 64; o++){\n            bitMap[row][o] ^= checkerBoard[o]\n            bitMap[conj][o] = bitMap[row][o]\n          }\n        }\n      }\n    }\n    console.log(s)\n    // for (let i = 0; i < bitMap.length; i++){\n    //   for (let j = 0; j > 64; j--){\n    //     bitMap[i][j] ^= bitMap[i][j+1]\n    //   }\n    // }\n    return bitMap\n  }\n\n  assembleResult = (c, bitMap, width, height) => {\n    const {fileType} = this.state\n    let iters = bitMap.length/24\n    // let count = 0\n    let x = 0 \n    let y = 0\n    let ctx = c.getContext(\"2d\")\n    // let bmp = this.constructBitMap(ctx, c.width, c.height)\n\n    for (let i = 0; i < iters; i++){\n      \n      for (let j = 0; j < bitMap[i].length; j++){\n        let r = \"\"\n        let g = \"\"\n        let b = \"\"\n        \n        for (let k = 0; k < 24; k++){\n\n          if (r.length !== 8){\n            r += bitMap[i*24+k][j]\n          } else {\n\n            if (g.length !== 8){\n              g += bitMap[i*24+k][j]\n            } else {\n              if (b.length !== 8){\n                b += bitMap[i*24+k][j]\n              }\n            }\n          }     \n\n        }\n\n        r = parseInt(r,2)\n        g = parseInt(g,2)\n        b = parseInt(b,2)\n  \n        let imgData = ctx.getImageData(x,y,1,1)\n        imgData.data[0] = r\n        imgData.data[1] = g\n        imgData.data[2] = b\n        ctx.putImageData(imgData, x, y)\n        if (x >= width-1){\n          x = 0\n          y += 1\n        } else {\n          x += 1\n        }\n        \n      }\n      \n    }  \n\n    let dest = document.getElementById('stegano-picture')\n    let img = document.getElementById('src-picture')\n    let c2 = document.createElement('canvas')\n    let bit = this.constructBitMap(ctx, width, height)\n    console.log(bit[495])\n    console.log(bitMap[495])\n    let ctx3 = c2.getContext(\"2d\")\n    ctx3.drawImage(img,0,0)\n    console.log(ctx3.getImageData(0,0,c.width,c.height))\n    if (fileType === \"image/bmp\"){\n       let bmpBlob = CanvasToBMP.toBlob(c)\n       dest.src = URL.createObjectURL(bmpBlob)\n    }else{\n      dest.src = c.toDataURL(fileType)\n    }\n    let ctx2 = c.getContext(\"2d\")\n    console.log(ctx2.getImageData(0,0,c.width,c.height)) \n  }\n\n\n  handleEncrypt = async (e) => {\n    e.preventDefault();\n    const {fileType} = this.state\n\n    // If message is file\n    if (targetData !== [] && fileData !== []) {\n      let array = targetData;\n      array = ExtVigenere.encrypt(array, this.state.key);\n      let txt = \"\";\n      txt += \"()\"\n      txt += this.state.injectedFileType\n      txt += \"{}\"\n      // let ordered = !this.state.randomize\n      let seed = 0\n      for (let i = 0; i < this.state.key.length; i++) {\n        seed += this.state.key.charCodeAt(i);\n      }\n      \n      console.log(txt)\n      for (let i = 0; i < txt.length; i++) {\n        array.push(txt.charCodeAt(i));\n      }\n      console.log(txt)\n      console.log(array);\n      let img = document.getElementById('src-picture')\n      let c = document.createElement('canvas')\n      c.width = img.width\n      c.height = img.height\n      console.log(img.width)\n      console.log(img.height)\n      let ctx = c.getContext(\"2d\")\n      ctx.drawImage(img,0,0)\n      \n      // Stegano BPCS     \n      if (this.state.bpcs){\n        let bitMap = this.constructBitMap(ctx, c.width, c.height)\n        bitMap = this.analyzeAndHide(bitMap, array, this.state.randomize, seed)\n        this.assembleResult(c, bitMap, c.width, c.height)\n      }else{\n      // Stegano LSB\n      let x = 0\n      let y = 0\n      if (!this.state.randomize){\n        for (let i = 0; i < array.length; i++){\n          let bits = array[i].toString(2)\n          bits = \"00000000\".substr(bits.length) + bits;\n          for (let j = 0; j < 8; j+=3){\n            if (x === img.width){\n              y += 1\n              x = 0\n            }\n            let imgData = ctx.getImageData(x,y,1,1)\n            imgData.data[0] &= 254\n            imgData.data[1] &= 254\n            if (bits[j+2] !== undefined){\n              imgData.data[2] &= 254\n              imgData.data[2] += parseInt(bits.charAt(j+2))\n            }\n            imgData.data[1] += parseInt(bits.charAt(j+1))\n            imgData.data[0] += parseInt(bits.charAt(j))\n            ctx.putImageData(imgData, x, y)\n            x += 1\n          }\n        }\n      } else if (this.state.randomize){\n        let listX = []\n        let listY = []\n        let rng = seedrandom(String.toString(seed))\n        for (let i = 0; i < array.length; i++){\n          let bits = array[i].toString(2)\n          bits = \"00000000\".substr(bits.length) + bits;\n          for (let j = 0; j < 8; j+=3){\n            let y = Math.round(rng() * (Math.floor(c.height-1)))\n            let x = Math.round(rng() * (Math.floor(c.width-1)))\n            listX.push(x)\n            listY.push(y)\n            if (x in listX && y in listY){\n              y = Math.round(rng() * (Math.floor(c.height-1)))\n              x = Math.round(rng() * (Math.floor(c.width-1)))\n            }\n            let imgData = ctx.getImageData(x,y,1,1)\n            imgData.data[0] &= 254\n            imgData.data[1] &= 254\n            if (bits[j+2] !== undefined){\n              imgData.data[2] &= 254\n              imgData.data[2] += parseInt(bits.charAt(j+2))\n            }\n            imgData.data[1] += parseInt(bits.charAt(j+1))\n            imgData.data[0] += parseInt(bits.charAt(j))\n            ctx.putImageData(imgData, x, y)\n            x += 1\n          }\n        }\n      }\n      let dest = document.getElementById('stegano-picture')\n      dest.src = c.toDataURL(fileType)\n      }\n\n      let imgOld = document.getElementById('src-picture')\n      let cOld = document.createElement('canvas')\n      let ctxOld = cOld.getContext(\"2d\")\n      ctxOld.drawImage(imgOld,0,0)\n      let sumTotal = 0\n      for (let i = 0; i < img.height; i++){\n        for (let j = 0; j < img.width; j++){\n          let imgData1 = ctxOld.getImageData(j,i,1,1)\n          let imgData2 = ctx.getImageData(j,i,1,1)\n          for (let k = 0; k < 3; k++){\n            sumTotal += Math.pow((imgData1.data[k] - imgData2.data[k]), 2)\n          }\n        }\n      }\n      console.log(sumTotal)\n      sumTotal /= (img.width*img.height)\n\n\n      let psnr = 20 * Math.log10(255/Math.sqrt(sumTotal))\n      console.log(psnr)\n    }\n    // If message is text\n    else if (this.state.text !== \"\" && fileData !== []) {\n      let array = [];\n      this.state.text += \"()\"\n      this.state.text += this.state.injectedFileType\n      this.state.text += \"{}\"\n      // let ordered = false\n      let seed = 10\n      \n      console.log(this.state.text)\n      for (var i = 0; i < this.state.text.length; i++) {\n        array.push(this.state.text.charCodeAt(i));\n      }\n      console.log(this.state.text)\n      console.log(array);\n      let img = document.getElementById('src-picture')\n      let c = document.createElement('canvas')\n      c.width = img.width\n      c.height = img.height\n      console.log(img.width)\n      console.log(img.height)\n      let ctx = c.getContext(\"2d\")\n      ctx.drawImage(img,0,0)\n      \n      // Stegano BPCS     \n      if (this.state.bpcs){\n        let bitMap = this.constructBitMap(ctx, c.width, c.height)\n        bitMap = this.analyzeAndHide(bitMap, array, !this.state.randomize, seed)\n        this.assembleResult(c, bitMap, c.width, c.height)\n      }else{\n\n\n\n      // Stegano LSB\n      let x = 0\n      let y = 0\n      if (!this.state.randomize){\n        for (let i = 0; i < array.length; i++){\n          let bits = array[i].toString(2)\n          bits = \"00000000\".substr(bits.length) + bits;\n          for (let j = 0; j < 8; j+=3){\n            if (x === img.width){\n              y += 1\n              x = 0\n            }\n            let imgData = ctx.getImageData(x,y,1,1)\n            imgData.data[0] &= 254\n            imgData.data[1] &= 254\n            if (bits[j+2] !== undefined){\n              imgData.data[2] &= 254\n              imgData.data[2] += parseInt(bits.charAt(j+2))\n            }\n            imgData.data[1] += parseInt(bits.charAt(j+1))\n            imgData.data[0] += parseInt(bits.charAt(j))\n            ctx.putImageData(imgData, x, y)\n            x += 1\n          }\n        }\n      } else if (this.state.randomize){\n        let listX = []\n        let listY = []\n        let rng = seedrandom(String.toString(seed))\n        for (let i = 0; i < array.length; i++){\n          let bits = array[i].toString(2)\n          bits = \"00000000\".substr(bits.length) + bits;\n          for (let j = 0; j < 8; j+=3){\n            let y = Math.round(rng() * (Math.floor(c.height-1)))\n            let x = Math.round(rng() * (Math.floor(c.width-1)))\n            listX.push(x)\n            listY.push(y)\n            if (x in listX && y in listY){\n              y = Math.round(rng() * (Math.floor(c.height-1)))\n              x = Math.round(rng() * (Math.floor(c.width-1)))\n            }\n            let imgData = ctx.getImageData(x,y,1,1)\n            imgData.data[0] &= 254\n            imgData.data[1] &= 254\n            if (bits[j+2] !== undefined){\n              imgData.data[2] &= 254\n              imgData.data[2] += parseInt(bits.charAt(j+2))\n            }\n            imgData.data[1] += parseInt(bits.charAt(j+1))\n            imgData.data[0] += parseInt(bits.charAt(j))\n            ctx.putImageData(imgData, x, y)\n            x += 1\n          }\n        }\n      }\n      let dest = document.getElementById('stegano-picture')\n      dest.src = c.toDataURL(fileType)\n\n      }\n\n      let imgOld = document.getElementById('src-picture')\n      let cOld = document.createElement('canvas')\n      let ctxOld = cOld.getContext(\"2d\")\n      ctxOld.drawImage(imgOld,0,0)\n      let sumTotal = 0\n      for (let i = 0; i < img.height; i++){\n        for (let j = 0; j < img.width; j++){\n          let imgData1 = ctxOld.getImageData(j,i,1,1)\n          let imgData2 = ctx.getImageData(j,i,1,1)\n          for (let k = 0; k < 3; k++){\n            sumTotal += Math.pow((imgData1.data[k] - imgData2.data[k]), 2)\n          }\n        }\n      }\n      console.log(sumTotal)\n      sumTotal /= (img.width*img.height*3)\n\n\n      let psnr = 20 * Math.log10(255/Math.sqrt(sumTotal))\n      console.log(psnr)\n\n      \n    } else {\n      alert(\"Text is empty or no picture file!\");\n    }\n  }\n\n  handleDecrypt = async (e) => {\n    e.preventDefault();\n\n    if (fileData !== []) {\n      // let array = [];\n      let img = document.getElementById('src-picture')\n      let c = document.createElement('canvas')\n      c.width = img.width\n      c.height = img.height\n      let ctx = c.getContext(\"2d\")\n      ctx.drawImage(img,0,0)\n      let result = \"\"\n\n      let seed = 0\n      for (var i = 0; i < this.state.key.length; i++) {\n        seed += this.state.key.charCodeAt(i);\n      }\n      // Decrypt BPCS\n      if (this.state.bpcs){\n        if (!this.state.randomize){\n          let bitMap = this.constructBitMap(ctx, c.width, c.height)\n          let temp = \"\"\n          let checkerBoard = this.checkerBoardMake()\n          for (let i = 0; i < bitMap.length; i++){\n            \n            if (this.evaluateComplexity(bitMap[i]) > 0.3){\n              let flagXORed = true\n              let amp = this.findAmplifiedMinified(i, bitMap.length-1)\n              for (let k = 0; k < 64; k++){\n                if (bitMap[i][k] !== bitMap[amp][k]){\n                  flagXORed = false\n                }            \n              }\n              \n              if (flagXORed){\n                for (let k = 0; k < 64; k++){\n                  bitMap[i][k] ^= checkerBoard[k]\n                }\n              }\n\n              for (let j = 0; j < bitMap[i].length; j++){\n                if (result[result.length-1] === '}' && result[result.length-2] === '{'){\n                  break\n                }\n                temp += bitMap[i][j]\n                if (temp.length === 8){\n                  let res = parseInt(temp,2)\n                  result += String.fromCharCode(res)\n                  temp = \"\"\n                }\n                \n              }\n              if (result[result.length-1] === '}' && result[result.length-2] === '{'){\n                result = result.substring(0, result.length - 2)\n                break\n              }\n            }     \n          }\n          console.log(result)\n        } else if (this.state.randomize){\n          let rng = seedrandom(String.toString(seed))\n          while(1){\n            \n            let bitMap = this.constructBitMap(ctx, c.width, c.height)\n            let temp = \"\"\n            let checkerBoard = this.checkerBoardMake()\n            \n            let filled = []\n            let row = Math.round(rng() * (Math.floor(bitMap.length/2)))\n            if (row in filled){\n              row = Math.round(rng() * (Math.floor(bitMap.length/2)))\n            }\n            filled.push(row)\n            let flagXORed = true\n            let amp = this.findAmplifiedMinified(row, bitMap.length-1)\n            for (let k = 0; k < 64; k++){\n              if (bitMap[row][k] !== bitMap[amp][k]){\n                flagXORed = false\n              }            \n            }\n            \n            if (flagXORed){\n              for (let k = 0; k < 64; k++){\n                bitMap[row][k] ^= checkerBoard[k]\n              }\n            }\n\n            for (let j = 0; j < bitMap[row].length; j++){\n              if (result[result.length-1] === '}' && result[result.length-2] === '{'){\n                break\n              }\n              temp += bitMap[row][j]\n              if (temp.length === 8){\n                let res = parseInt(temp,2)\n                result += String.fromCharCode(res)\n                temp = \"\"\n              }\n            }\n            if (result[result.length-1] === '}' && result[result.length-2] === '{'){\n              result = result.substring(0, result.length - 2);\n              break\n            }\n          }\n          console.log(result)\n        }\n        targetData = [];\n        for (let i = 0; i < result.length; i++) {\n          targetData.push(result.charCodeAt(i));\n        }\n        targetData = ExtVigenere.decrypt(targetData, this.state.key);\n        let ext = \"\"\n        for (let i = result.length-1; i > 0; i--){\n          if (result[i] === \")\"){\n            console.log(i-1)\n            result = result.substring(0, i-1);\n            break\n          }\n          ext += result[i]        \n        }\n        console.log(result)\n        ext = ext.split(\"\")\n        ext = ext.reverse()\n        ext = ext.join(\"\")\n        console.log(ext)\n        this.setState({\n          injectedFileType:ext\n        })\n        document.getElementById(\"modal-result\").style.display = \"block\";\n      }else{\n        //Decrypt LSB\n        let im = ctx.getImageData(0,0,c.width,c.height)\n        console.log(im)\n        let bits = \"\";\n        let text = \"\"\n        if (!this.state.randomize){\n          for (let i = 0; i < img.height; i++){\n            for (let j = 0; j < img.width; j++){\n              if (text[text.length-1] === '}' && text[text.length-2] === '{'){\n                break\n              }\n              let imgData = ctx.getImageData(j,i,1,1)\n              \n              bits += imgData.data[0] & 1;\n              bits += imgData.data[1] & 1;\n\n              if (bits.length + 1 < 8){\n                bits += imgData.data[2] & 1;\n              }\n              if (bits.length >= 8){\n                let res = (parseInt(bits,2))\n                text += String.fromCharCode(res)\n                bits = \"\"\n              }\n      \n            }\n            if (text[text.length-1] === '}' && text[text.length-2] === '{'){\n              text = text.substring(0, text.length - 2);\n              break\n            }\n          }\n        } else if (this.state.randomize){\n          let rng = seedrandom(String.toString(seed))\n          let listX = []\n          let listY = []\n          while(1){\n            if (text[text.length-1] === '}' && text[text.length-2] === '{'){\n              text = text.substring(0, text.length - 2);\n              break\n            }\n            let y = Math.round(rng() * (Math.floor(c.height-1)))\n            let x = Math.round(rng() * (Math.floor(c.width-1)))\n            listX.push(x)\n            listY.push(y)\n            if (x in listX && y in listY){\n              y = Math.round(rng() * (Math.floor(c.height-1)))\n              x = Math.round(rng() * (Math.floor(c.width-1)))\n            }\n            \n            let imgData = ctx.getImageData(x,y,1,1)\n              \n              bits += imgData.data[0] & 1;\n              bits += imgData.data[1] & 1;\n\n              if (bits.length + 1 < 8){\n                bits += imgData.data[2] & 1;\n              }\n              if (bits.length >= 8){\n                let res = (parseInt(bits,2))\n                text += String.fromCharCode(res)\n                bits = \"\"\n              }\n          }\n        }\n        console.log(text)\n        let ext = \"\"\n        for (let i = text.length-1; i > 0; i--){\n          if (text[i] === \")\"){\n            console.log(i-1)\n            text = text.substring(0, i-1);\n            break\n          }\n          ext += text[i]        \n        }\n        targetData = [];\n        for (let i = 0; i < text.length; i++) {\n          targetData.push(text.charCodeAt(i));\n        }\n        targetData = ExtVigenere.decrypt(targetData, this.state.key);\n        console.log(text)\n        ext = ext.split(\"\")\n        ext = ext.reverse()\n        ext = ext.join(\"\")\n        console.log(ext)\n        this.setState({\n          injectedFileType:ext\n        })\n        } \n        document.getElementById(\"modal-result\").style.display = \"block\";\n    } else {\n      alert(\"No paint file!\");\n    }\n  }\n  \n  handleURLRead = (e) => {\n    const {fileType} = this.state\n    const typedArray = new Uint8Array(fileReader.result);\n    const blob = new Blob([typedArray],{ type:fileType})\n    const urlCreator = window.URL || window.webkitURL\n    const imageUrl = urlCreator.createObjectURL(blob)\n    this.setState({ pictureSrc: imageUrl })\n  }\n\n  downloadExtended = async (content) => {\n    const typedArray = new Uint8Array(targetData);\n    const element = document.createElement(\"a\");\n    const file = new Blob([typedArray], {\n      type: this.state.injectedFileType,\n    });\n\n    element.className = \"download-file\";\n    let url = URL.createObjectURL(file);\n    this.setState({ steganoSrc: url })\n    element.href = url; \n    element.download = this.state.injectedFileName;\n    document.body.appendChild(element);\n    element.click();\n    element.remove();\n  }\n\n  readDataSize = async (dataArray) => {\n    let max = 0;\n    for (var i = 43; i >= 40; i--) {\n      max = max * 256;\n      max += dataArray[i];\n      console.log(max)\n    }\n    this.setState({ dataSize: max });\n\n  }\n\n  closeModal() {\n    document.getElementById(\"modal-result\").style.display = \"none\";\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"wrapper-encrypt\">\n          <div className=\"container-encrypt\">\n            <form className=\"encrypt-form\" onSubmit={this.handleEncrypt}>\n              <label>Text</label>\n              <textarea id=\"text-input\" placeholder={\"Max character: \" + (this.state.dataSize/8)} disabled={this.state.dataSize === 0}\n                type=\"text\" name=\"text\" rows=\"4\" onChange={this.onTextChange} value={this.state.text}/>\n\n              <input id=\"target-input\" type=\"file\" name=\"target\" className=\"target-button\" onChange={this.onTargetChange} />\n              <label htmlFor=\"target-input\">\n                <FontAwesomeIcon icon={this.state.injectedFileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.injectedFileName === \"\" ? \"Target\" : truncate(this.state.injectedFileName)}\n              </label>\n\n              <label>Key</label>\n              <input className=\"key-input\" placeholder=\"Insert vigenere key here\" type=\"text\" name=\"key\" onChange={this.onKeyChange} value={this.state.key}/>\n\n              <label>Save As...</label>\n              <input className=\"key-input\" placeholder=\"something.wav\" type=\"text\" name=\"key\" onChange={this.onNameChange} value={this.state.steganoName}/>\n\n              <label>Randomize?</label>\n              <input type=\"checkbox\" id=\"rand-input\" name=\"rand-input\" checked={this.state.randomize} onChange={this.onRandChange}/>\n\n              <label>BPCS?</label>\n              <input type=\"checkbox\" id=\"bpcs-input\" name=\"bpcs-input\" checked={this.state.bpcs} onChange={this.onBPCSChange}/>\n\n              <div className=\"button-container\">\n                <input id=\"file-input\" type=\"file\" accept=\"image/bmp,image/png\" name=\"file\" className=\"upload-button\" onChange={this.onFileChange} />\n                <label htmlFor=\"file-input\">\n                  <FontAwesomeIcon icon={this.state.fileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.fileName === \"\" ? \"Upload\" : truncate(this.state.fileName)}\n                </label>\n                <img id=\"src-picture\" alt={this.state.fileName} src={this.state.pictureSrc} width=\"200px\" height=\"200px\"></img>\n                <button className=\"encrypt-button\" type=\"submit\">\n                  <FontAwesomeIcon icon=\"lock\" /> &nbsp; Encrypt\n                </button>\n                <img id=\"stegano-picture\" alt={this.state.steganoName} src={this.state.steganoSrc} width=\"200px\" height=\"200px\"></img>\n              </div>\n              {/* <button onClick={this.handleDecrypt}>HELP</button> */}\n            </form>\n            <form className=\"encrypt-form\" onSubmit={this.handleDecrypt}>\n              <div className=\"button-container\">\n                <input id=\"file-input\" type=\"file\" accept=\"image/bmp,image/png\" name=\"file\" className=\"upload-button\" onChange={this.onFileChange} />\n                <label htmlFor=\"file-input\">\n                  <FontAwesomeIcon icon={this.state.fileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.fileName === \"\" ? \"Upload\" : truncate(this.state.fileName)}\n                </label>\n                {/* <img id=\"src-picture\" alt={this.state.fileName} src={this.state.pictureSrc} width=\"200px\" height=\"200px\"></img> */}\n                <button className=\"encrypt-button\" type=\"submit\">\n                  <FontAwesomeIcon icon=\"lock\" /> &nbsp; Decrypt\n                </button>\n              </div>\n              \n            </form>\n          </div>\n        </div>\n        <div id=\"modal-result\" className=\"modal-decrypt\">\n          <div className=\"modal-content-container\">\n            <div className=\"modal-content\">\n              <p id=\"message\"><span id=\"methodResult\"></span> Result</p>\n\n              <label>Save extracted file as...</label>\n              <input id=\"iFN-input\" placeholder=\"Name of injected file\" type=\"text\" name=\"injectedFN\" onChange={this.onInjectedFileNameChange} value={this.state.injectedFileName}/>\n\n              <div className=\"button-container\">\n                <button className=\"download-button\" onClick={this.downloadExtended}>\n                  <FontAwesomeIcon icon=\"download\" /> &nbsp; Download\n                </button>\n\n                <button className=\"close-button\" onClick={this.closeModal}>\n                  <FontAwesomeIcon icon=\"times-circle\" /> &nbsp; Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Picture;\n","import React, { Component } from \"react\";\n// import Select from \"react-select\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./SoundDec.css\";\nvar seedrandom = require('seedrandom');\n// import { text } from \"@fortawesome/fontawesome-svg-core\";\n\nlet ExtVigenere = require(\"../../backend/extendedVigenere\");\n\nconst truncate = (input) => {\n  return (input.length > 10) ? input.substr(0, 9) + '...' : input;\n}\n\n// http://stackoverflow.com/questions/962802#962890\nfunction deshuffle(array, seed) {\n  var num, tmp, l = array.length;\n  var myrng = new seedrandom(seed);\n  let seedNum = [];\n  for (var i=0; i<array.length; i++) {\n    seedNum.push(Math.abs(myrng.int32()));\n  }\n  console.log(seedNum);\n  for (i=array.length-1; i>=0; i--) {\n    num = seedNum.pop();\n    tmp = array[num % l];\n    array[num % l] = array[i];\n    array[i] = tmp;\n  }\n  return array;\n}\n\nlet fileData = [];\nlet targetData = [];\n\nlet fileReader;\n\nclass SoundDec extends Component {\n  state = {\n    key: \"\",\n    selectedFile: undefined,\n    steganoSrc: \"\",\n    soundSrc: \"\",\n    fileType: \"\",\n    fileName: \"\",\n    text: \"\",\n    injectedFile: undefined,\n    injectedFileName: \"\",\n    off: 0,\n    dataSize: 0\n  }\n\n  onKeyChange = (e) => {\n    this.setState({ key: e.target.value })\n  }\n\n  onTextChange = event => {\n    this.setState({ text: event.target.value });\n  }\n\n  onInjectedFileNameChange = event => {\n    this.setState({ injectedFileName: event.target.value });\n  }\n\n  // On file select (from the pop up)\n  onFileChange = event => {\n    if (event.target.files[0] !== undefined) {\n      this.setState({ selectedFile: event.target.files[0]});\n      this.setState({ fileName: event.target.files[0].name });\n      this.setState({ fileType: event.target.files[0].type });\n      if (event.target.files[0] !== undefined) {\n        fileReader = new FileReader();\n        fileReader.onloadend = this.handleFileRead;\n        fileReader.readAsArrayBuffer(event.target.files[0]);\n        this.setState({ soundSrc: URL.createObjectURL(event.target.files[0]) });\n      }\n    }\n  }\n\n  handleFileRead = async (e) => {\n    const typedArray = new Uint8Array(fileReader.result);\n\n    fileData = [...typedArray];\n    \n    this.readDataSize(fileData);\n  }\n\n  handleDecrypt = async (e) => {\n    e.preventDefault();\n\n    var offset = this.state.off\n\n    if (fileData !== []) {\n      // Gets each last bit from audio\n      let array = [];\n      for (var i = 0; i < this.state.dataSize; i++) {\n        let bits = \"\";\n        for (var j = 0; j < 8; j++) {\n          bits += fileData[offset+(i*8)+j] & 1;\n        }\n        array.push(parseInt(bits, 2));\n      }\n      \n      // Extract only the text part\n      i = 0;\n      var type = array[i]; i++;\n      let res = \"\";\n      var randomize, tmp = [];\n\n      // Extracts text\n      if (type === 0) {\n        tmp = [];\n        while (i < array.length && array[i] > 1) {\n          tmp.push(array[i]);\n          i++;\n        }\n        randomize = array[i];\n        console.log(randomize);\n        array = tmp;\n        console.log(array);\n\n        // Decrypts it\n        array = ExtVigenere.decrypt(array, this.state.key);\n\n        // Derandomizes array\n        if (randomize === 1) {\n          array = deshuffle(array, this.state.key);\n          console.log(array);\n        }\n\n        i = 0;\n        while (i < array.length && array[i] !== 0) {\n          res += String.fromCharCode(array[i]);\n          i++;\n        }\n        this.setState({ text: res })\n      } \n      // Extracts file\n      else if (type === 1) {\n        console.log(\"first byte === 1\");\n        console.log(array);\n        var nLen = 0, fLen = 0;\n        var name = \"\";\n        nLen = array[i] + array[i+1]*256 + array[i+2]*256*256 + array[i+3]*256*256*256;\n        i = i + 4;\n        var dis = i + nLen;\n        while (i < dis) {\n          name += String.fromCharCode(array[i]);\n          i++;\n        }\n        fLen = array[i] + array[i+1]*256 + array[i+2]*256*256 + array[i+3]*256*256*256;\n        i = i + 4;\n        tmp = [];\n        dis = i + fLen;\n        while (i < dis) {\n          tmp.push(array[i]);\n          i++;\n        }\n\n        randomize = array[i];\n        console.log(randomize);\n        array = tmp;\n        console.log(array);\n\n        // Decrypts it\n        array = ExtVigenere.decrypt(array, this.state.key);\n\n        // Derandomizes array\n        if (randomize === 1) {\n          array = deshuffle(array, this.state.key);\n          console.log(array);\n        }\n\n        // Download file\n        targetData = array;\n        // const typedArray = new Uint8Array(targetData);\n        this.setState({injectedFileName : name});\n        console.log(name);\n        // this.downloadExtended(typedArray, name);\n\n        document.getElementById(\"modal-result\").style.display = \"block\";\n      } else {\n        alert(\"Not a stego-file!\");\n      }\n    } else {\n      alert(\"No sound file!\");\n    }\n  }\n\n  downloadExtended = async (e) => {\n    const typedArray = new Uint8Array(targetData);\n    const element = document.createElement(\"a\");\n    const file = new Blob([typedArray], {\n    });\n\n    element.className = \"download-file\";\n    let url = URL.createObjectURL(file);\n    this.setState({ steganoSrc: url })\n    element.href = url; \n    element.download = this.state.injectedFileName;\n    document.body.appendChild(element);\n    element.click();\n    element.remove();\n  }\n\n  readDataSize = async (dataArray) => {\n    let offset = 0;\n    var i = 0, found = false;\n    while (i < dataArray.length && !found) {\n      if (dataArray[i] === 100 && dataArray[i+1] === 97 && dataArray[i+2] === 116 && dataArray[i+3] === 97) {\n        found = true;\n      };\n      i++;\n    }\n    offset = i+8;\n    console.log(offset);\n    this.setState({ off: (offset) });\n    this.setState({ dataSize: (dataArray.length - (offset)) });\n  }\n\n  closeModal() {\n    document.getElementById(\"modal-result\").style.display = \"none\";\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"wrapper-decrypt\">\n          <div className=\"container-decrypt\">\n            <form className=\"decrypt-form\" onSubmit={this.handleDecrypt}>\n              <label>Text</label>\n              <textarea className=\"text-input\" placeholder={\"Max character: \" + (this.state.dataSize/8)} disabled={this.state.dataSize === 0} readOnly\n                  type=\"text\" name=\"text\" rows=\"6\" value={this.state.text}/>\n\n              <label>Key</label>\n              <input className=\"key-input\" placeholder=\"Insert vigenere key here\" type=\"text\" name=\"key\" onChange={this.onKeyChange} value={this.state.key}/>\n\n              <div className=\"button-container\">\n                <input id=\"file-input\" type=\"file\" accept=\"audio/wav\" name=\"file\" className=\"upload-button\" onChange={this.onFileChange} />\n                <label htmlFor=\"file-input\">\n                  <FontAwesomeIcon icon={this.state.fileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.fileName === \"\" ? \"Upload\" : truncate(this.state.fileName)}\n                </label>\n                <audio id=\"src-sound\" src={this.state.soundSrc} controls={this.state.soundSrc!==\"\"}></audio>\n                <button className=\"decrypt-button\" type=\"submit\">\n                  <FontAwesomeIcon icon=\"lock-open\" /> &nbsp; Decrypt\n                </button>\n              </div>\n            </form>\n            <form hidden={this.state.injectedFileName === \"\"} onSubmit={this.downloadExtended}>\n                \n            </form>\n          </div>\n        </div>\n        <div id=\"modal-result\" className=\"modal-decrypt\">\n          <div className=\"modal-content-container\">\n            <div className=\"modal-content\">\n              <p id=\"message\"><span id=\"methodResult\"></span> Result</p>\n\n              <label>Save extracted file as...</label>\n              <input id=\"iFN-input\" placeholder=\"Name of injected file\" type=\"text\" name=\"injectedFN\" onChange={this.onInjectedFileNameChange} value={this.state.injectedFileName}/>\n\n              <div className=\"button-container\">\n                <button className=\"download-button\" onClick={this.downloadExtended}>\n                  <FontAwesomeIcon icon=\"download\" /> &nbsp; Download\n                </button>\n\n                <button className=\"close-button\" onClick={this.closeModal}>\n                  <FontAwesomeIcon icon=\"times-circle\" /> &nbsp; Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SoundDec;\n","import React, { Component } from \"react\";\n// import Select from \"react-select\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Video.css\";\n// import { text } from \"@fortawesome/fontawesome-svg-core\";\n// import { randomInt } from \"mathjs\";\n\nlet ExtVigenere = require(\"../../backend/extendedVigenere\");\nlet string = require('../../backend/util/string')\n\nconst truncate = (input) => {\n  return (input.length > 10) ? input.substr(0, 9) + '...' : input;\n}\n\n// http://stackoverflow.com/questions/962802#962890\nfunction shuffle(array, seed) {\n  var tmp, l = array.length;\n  let seedNum;\n  for (var i=0; i<seed.length; i++) {\n    seedNum = seed.charCodeAt(i);\n    tmp = array[seedNum % l];\n    array[seedNum % l] = array[i % l];\n    array[i % l] = tmp;\n  }\n  return array;\n}\n\nlet fileData = [];\n\nlet URLReader;\nlet fileReader;\n\nclass Video extends Component {\n  state = {\n    key: \"\",\n    selectedFile: undefined,\n    steganoSrc: \"\",\n    videoSrc: \"\",\n    fileType: \"\",\n    fileName: \"\",\n    text: \"\",\n    dataSize: 0,\n    randomize: false\n  }\n\n  onKeyChange = (e) => {\n    this.setState({ key: e.target.value })\n  }\n\n  onTextChange = event => {\n    this.setState({ text: event.target.value });\n  }\n\n  onRandChange = (e) => {\n    this.setState({ randomize: !this.state.randomize })\n  }\n\n  // On file select (from the pop up)\n  onFileChange = event => {\n    if (event.target.files[0] !== undefined) {\n      this.setState({ selectedFile: event.target.files[0]});\n      this.setState({ fileName: event.target.files[0].name });\n      this.setState({ fileType: event.target.files[0].type });\n      if (event.target.files[0] !== undefined) {\n        const src = URL.createObjectURL(event.target.files[0]);\n        this.setState({videoSrc: src});\n        // console.log(this.state.selectedFile);\n        fileReader = new FileReader();\n        fileReader.onloadend = this.handleFileRead;\n        fileReader.readAsArrayBuffer(event.target.files[0]);\n        URLReader = new FileReader();\n        URLReader.onloadend = this.handleURLRead;\n        URLReader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n  handleFileRead = async (e) => {\n    // console.log(this.state.fileType)\n    // console.log(content)\n    const typedArray = new Uint8Array(fileReader.result);\n    // console.log(typedArray)\n\n    fileData = [...typedArray];\n    // console.log(fileData);\n    \n    this.readDataSize(fileData);\n    \n    // const encryptedBuffer = new Uint8Array(encrypted);\n    \n    // this.downloadExtended(encryptedBuffer);\n    // this.setState({ soundSrc: content })\n  }\n\n  handleEncrypt = async (e) => {\n    e.preventDefault();\n\n    // If message is too long, do nothing\n    if (this.state.text.length > this.state.dataSize) {\n      alert(\"Message too long!\");\n      return;\n    }\n\n    // Start steganography\n    if (this.state.text !== \"\" && fileData !== []) {\n\n      // Setup variables\n      let array = string.toASCII(this.state.text);\n      let endbyte = 0;\n      if (this.state.randomize) { \n        endbyte = 1;\n      }\n\n      // Encrypts text into array of ASCII\n      array = ExtVigenere.encrypt(array, this.state.key);\n      \n      // Push \"end of text\" byte\n      array.push(endbyte);\n      console.log(\"array: \" + array);\n      // console.log(array);\n\n      var movi = 0;\n      // var offset = 0;\n      for (var i=0;i<fileData.length;i++) {\n        if (fileData[i] === 109 && fileData[i+1] === 111 && fileData[i+2] === 118 && fileData[i+3] === 105) {\n          movi = i;\n          // if (movi) {\n          //   if (fileData[i] === 0 && fileData[i+1] === 0 && fileData[i+2] === 1) {\n          //     offset = i+3;\n          //     break;\n          //   }\n          // }\n        }\n      }\n      console.log(movi);\n\n      // Randomize array\n      let seqArray = [];\n      for (i = 0; i < array.length; i++) {\n        seqArray.push(i);\n      }\n      // console.log(seqArray);\n      if (this.state.randomize) { \n        seqArray = shuffle(seqArray, this.state.key);\n      }\n      \n      // Put each bit into audio\n      i = 0;\n      // let randbits = \"00000000\"\n      \n      // for(var j=0; j<8; j++){\n      //   fileData[movi+4+j] &= 254;\n      //   // console.log(\"filedata after 1: \" + fileData[movi+4+(i*8)+j]);\n      //   fileData[movi+4+j] += parseInt(randbits.charAt(j));\n      //   // console.log(\"filedata after 2: \" + fileData[movi+4+(i*8)+j]);\n      // }\n      while(i < seqArray.length) {\n        // console.log(\"iterasi ke :\" +i);\n        let bits = array[i].toString(2);\n        // console.log(\"bit before \" + bits)\n        bits = \"00000000\".substr(bits.length) + bits;\n        // console.log(\"bit after \" + bits)\n        for (var j = 0; j < 8; j++) {\n          // console.log(\"filedata before\" + fileData[movi+4+(i*8)+j]);\n          fileData[movi+4+(seqArray[i]*8)+j] &= 254;\n          // console.log(\"filedata after 1: \" + fileData[movi+4+(i*8)+j]);\n          fileData[movi+4+(seqArray[i]*8)+j] += parseInt(bits.charAt(j));\n          // console.log(\"filedata after 2: \" + fileData[movi+4+(i*8)+j]);\n        }\n        i++;\n      }\n      // console.log(fileData);\n      // Download audio\n      const typedArray = new Uint8Array(fileData);\n      this.downloadExtended(typedArray);\n    }\n  }\n  \n  handleURLRead = (e) => {\n    this.setState({ videoSrc: fileReader.result })\n  }\n\n  downloadExtended = async (content) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([content], {\n      type: this.state.fileType,\n    });\n\n    element.className = \"download-file\";\n    let url = URL.createObjectURL(file);\n    this.setState({ steganoSrc: url })\n    element.href = url; \n    element.download = \"Altered-\" + this.state.fileName;\n    document.body.appendChild(element);\n    element.click();\n    element.remove();\n  }\n\n  readDataSize = async (dataArray) => {\n    let max = 0;\n    let temp = \"\";\n    for (var i = 7; i >= 4; i--) {\n      max = parseInt(dataArray[i]);\n      temp += max.toString(16);\n    }\n    max = (parseInt(temp, 16) + 8)/8;\n    // console.log(max);\n    this.setState({ dataSize: max });\n\n  }\n\n  closeModal() {\n    document.getElementById(\"modal-result\").style.display = \"none\";\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"wrapper-encrypt\">\n          <div className=\"container-encrypt\">\n            <form className=\"encrypt-form\" onSubmit={this.handleEncrypt}>\n              <label>Text</label>\n              <textarea id=\"text-input\" placeholder={\"Max character: \" + this.state.dataSize} disabled={this.state.dataSize === 0}\n                type=\"text\" name=\"text\" rows=\"6\" onChange={this.onTextChange} value={this.state.text}/>\n\n              <label>Key</label>\n              <input id=\"key-input\" placeholder=\"Insert vigenere key here\" type=\"text\" name=\"key\" onChange={this.onKeyChange} value={this.state.key}/>\n\n              <label>Randomize?</label>\n              <input type=\"checkbox\" id=\"rand-input\" name=\"rand-input\" checked={this.state.randomize} onChange={this.onRandChange}/>\n\n              <div className=\"button-container\">\n                <input id=\"file-input\" type=\"file\" accept=\"video/avi\" name=\"file\" className=\"upload-button\" onChange={this.onFileChange} />\n                <label htmlFor=\"file-input\">\n                  <FontAwesomeIcon icon={this.state.fileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.fileName === \"\" ? \"Upload\" : truncate(this.state.fileName)}\n                </label>\n                {/* <video width=\"320\" height=\"240\" controls>\n                  <source src=\"sample.avi\" type=\"video/avi\"/>\n                </video> */}\n                <button className=\"encrypt-button\" type=\"submit\">\n                  <FontAwesomeIcon icon=\"lock\" /> &nbsp; Encrypt\n                </button>\n                {/* <video width=\"320\" height=\"240\" controls={this.state.steganoSrc!==\"\"}>\n                    <source src={this.state.steganoSrc} type=\"video/avi\"></source>\n                </video> */}\n\n              </div>\n            </form>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Video;\n","import React, { Component } from \"react\";\n// import Select from \"react-select\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./VideoDec.css\";\n// var seedrandom = require('seedrandom');\n// import { text } from \"@fortawesome/fontawesome-svg-core\";\n\nlet ExtVigenere = require(\"../../backend/extendedVigenere\");\n\nconst truncate = (input) => {\n  return (input.length > 10) ? input.substr(0, 9) + '...' : input;\n}\n\n// http://stackoverflow.com/questions/962802#962890\n// function deshuffle(array, seed) {\n//   var num, tmp, l = array.length;\n//   var myrng = new seedrandom(seed);\n//   let seedNum = [];\n//   for (var i=0; i<array.length; i++) {\n//     seedNum.push(Math.abs(myrng.int32()));\n//   }\n//   console.log(seedNum);\n//   for (i=array.length-1; i>=0; i--) {\n//     num = seedNum.pop();\n//     tmp = array[num % l];\n//     array[num % l] = array[i];\n//     array[i] = tmp;\n//   }\n//   return array;\n// }\n\nlet fileData = [];\n\nlet URLReader;\nlet fileReader;\n\nclass VideoDec extends Component {\n  state = {\n    key: \"\",\n    selectedFile: undefined,\n    steganoSrc: \"\",\n    videoSrc: \"\",\n    fileType: \"\",\n    fileName: \"\",\n    text: \"\",\n    off: 0,\n    dataSize: 0\n  }\n\n  onKeyChange = (e) => {\n    this.setState({ key: e.target.value })\n  }\n\n  onTextChange = event => {\n    this.setState({ text: event.target.value });\n  }\n\n  // On file select (from the pop up)\n  onFileChange = event => {\n    if (event.target.files[0] !== undefined) {\n      this.setState({ selectedFile: event.target.files[0]});\n      this.setState({ fileName: event.target.files[0].name });\n      this.setState({ fileType: event.target.files[0].type });\n      if (event.target.files[0] !== undefined) {\n        fileReader = new FileReader();\n        fileReader.onloadend = this.handleFileRead;\n        fileReader.readAsArrayBuffer(event.target.files[0]);\n        URLReader = new FileReader();\n        URLReader.onloadend = this.handleURLRead;\n        URLReader.readAsDataURL(event.target.files[0]);\n      }\n    }\n  }\n\n  handleFileRead = async (e) => {\n    const typedArray = new Uint8Array(fileReader.result);\n\n    fileData = [...typedArray];\n    \n    this.readDataSize(fileData);\n  }\n\n  handleDecrypt = async (e) => {\n    e.preventDefault();\n\n    var offset = this.state.off\n\n    if (fileData !== []) {\n      // Gets each last bit from audio\n      let array = [];\n      for (var i = 0; i < this.state.dataSize; i++) {\n        let bits = \"\";\n        for (var j = 0; j < 8; j++) {\n          bits += fileData[offset+4+(i*8)+j] &1;\n        }\n        array.push(parseInt(bits, 2));\n      }\n      \n      // Extract only the text part\n      let res = \"\";\n      array = array.slice(0,array.indexOf(0));\n      console.log(\"array: \" +array);\n      array = ExtVigenere.decrypt(array, this.state.key);\n\n      i = 0;\n      while (i < array.length && array[i] !== 0) {\n        res += String.fromCharCode(array[i]);\n        i++;\n      }\n      this.setState({ text: res })\n    } else {\n      alert(\"No sound file!\");\n    }\n  }\n  \n  handleURLRead = (e) => {\n    this.setState({ soundSrc: fileReader.result })\n  }\n\n  downloadExtended = async (content) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([content], {\n      type: this.state.fileType,\n    });\n\n    element.className = \"download-file\";\n    let url = URL.createObjectURL(file);\n    this.setState({ steganoSrc: url })\n    element.href = url; \n    element.download = \"Altered-\" + this.state.fileName;\n    document.body.appendChild(element);\n    element.click();\n    element.remove();\n  }\n\n  readDataSize = async (dataArray) => {\n    let offset = 0;\n    var i = 0, found = false;\n    while (i < dataArray.length && !found) {\n      if (dataArray[i] === 109 && dataArray[i+1] === 111 && dataArray[i+2] === 118 && dataArray[i+3] === 105) {\n        found = true;\n        // if (found1) {\n        //   if (dataArray[i] === 0 && dataArray[i+1] === 0 && dataArray[i+2] === 1) {\n        //     offset = i + 3;\n        //     found2 = true;\n        //   }\n        // }\n      };\n      i++;\n    }\n    offset = i-1;\n    console.log(offset);\n    this.setState({ off: (offset) });\n    this.setState({ dataSize: (dataArray.length - (offset)) });\n  }\n\n  closeModal() {\n    document.getElementById(\"modal-result\").style.display = \"none\";\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"wrapper-decrypt\">\n          <div className=\"container-decrypt\">\n            <form className=\"decrypt-form\" onSubmit={this.handleDecrypt}>\n              <label>Text</label>\n              <textarea id=\"text-input\" placeholder={\"Max character: \" + (this.state.dataSize/8)} disabled={this.state.dataSize === 0} readOnly\n                  type=\"text\" name=\"text\" rows=\"6\" value={this.state.text}/>\n\n              <label>Key</label>\n              <input id=\"key-input\" placeholder=\"Insert vigenere key here\" type=\"text\" name=\"key\" onChange={this.onKeyChange} value={this.state.key}/>\n\n              <div className=\"button-container\">\n                <input id=\"file-input\" type=\"file\" accept=\"video/avi\" name=\"file\" className=\"upload-button\" onChange={this.onFileChange} />\n                <label htmlFor=\"file-input\">\n                  <FontAwesomeIcon icon={this.state.fileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.fileName === \"\" ? \"Upload\" : truncate(this.state.fileName)}\n                </label>\n                {/* <audio id=\"src-sound\" src={this.state.soundSrc} controls={this.state.soundSrc!==\"\"}></audio> */}\n                <button className=\"decrypt-button\" type=\"submit\">\n                  <FontAwesomeIcon icon=\"lock-open\" /> &nbsp; Decrypt\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default VideoDec;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport BottomBar from \"../BottomBar/BottomBar\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\nimport Title from \"../Title/Title\";\nimport Sound from \"../Sound/Sound\";\nimport Picture from \"../Picture/Picture\"\nimport SoundDec from \"../SoundDec/SoundDec\";\nimport Video from \"../Video/Video\";\nimport VideoDec from \"../VideoDec/VideoDec\";\n\nfunction Router() {\n\treturn (\n    <main>\n      <NavigationBar></NavigationBar>\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/title\" />} />\n        <Route exact path=\"/title\" component={Title} />\n        {/* <Route exact path=\"/encrypt\" component={Encrypt} /> */}\n        {/* <Route exact path=\"/decrypt\" component={Decrypt} /> */}\n        {/* <Route exact path=\"/enigma\" component={Enigma} /> */}\n        <Route exact path=\"/sound\" component={Sound} />\n        <Route exact path=\"/picture\" component={Picture} />\n        <Route exact path=\"/sound-dec\" component={SoundDec} />\n        <Route exact path=\"/video\" component={Video} />\n        <Route exact path=\"/video-dec\" component={VideoDec} />\n        {/* <Route exact path=\"/*\" component={Title} /> */}\n      </Switch>\n      <BottomBar></BottomBar>\n    </main>\n  );\n}\n\nexport default Router;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  body {\n    align-items: center;\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n    transition: all 0.25s linear;\n  }\n\n  .logo {\n    filter: ${({ theme }) => theme.filter};\n  }\n  `;","export const lightTheme = {\n  body: \"#C2F2F2\",\n  text: \"#361517\",\n  toggleBorder: \"#FFF\",\n  gradient: \"linear-gradient(#39598A, #79D7ED)\",\n  filter: \"invert(20%)\"\n};\n\nexport const darkTheme = {\n  body: \"#361537\",\n  text: \"#EAFAEA\",\n  toggleBorder: \"#6B8096\",\n  gradient: \"linear-gradient(#091236, #1E215D)\",\n  filter: \"invert(90%)\"\n};\n","import React from \"react\";\nimport { func, string } from \"prop-types\";\nimport \"./switch.css\";\n\nconst Switch = ({ theme, toggleTheme }) => {\n  const isLight = theme === \"light\";\n\n  return (\n    <div className=\"wrapper\">\n      <input readOnly onClick={toggleTheme} type=\"checkbox\" id=\"hide-checkbox\" checked={isLight ? true : false}></input>\n      <label htmlFor=\"hide-checkbox\" className=\"toggle\">\n        <span className=\"toggle-button\">\n          <span className=\"crater crater-1\"></span>\n          <span className=\"crater crater-2\"></span>\n          <span className=\"crater crater-3\"></span>\n          <span className=\"crater crater-4\"></span>\n          <span className=\"crater crater-5\"></span>\n          <span className=\"crater crater-6\"></span>\n          <span className=\"crater crater-7\"></span>\n        </span>\n        <span className=\"star star-1\"></span>\n        <span className=\"star star-2\"></span>\n        <span className=\"star star-3\"></span>\n        <span className=\"star star-4\"></span>\n        <span className=\"star star-5\"></span>\n        <span className=\"star star-6\"></span>\n        <span className=\"star star-7\"></span>\n        <span className=\"star star-8\"></span>\n      </label>\n    </div>\n  );\n};\n\nSwitch.propTypes = {\n  theme: string.isRequired,\n  toggleTheme: func.isRequired,\n};\n\nexport default Switch;\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport Router from './Components/Routes/Router';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./global\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { useDarkMode } from \"./useDarkMode\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLock, faLockOpen, faUnlock, faFile, faFileUpload, faCloudDownloadAlt, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Switch from \"./Components/switch\";\nimport './App.css';\n\nlibrary.add(faLock, faLockOpen, faUnlock, faFile, faFileUpload, faCloudDownloadAlt, faTimesCircle);\n\nfunction App() {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n  let lineColor = theme === \"light\" ? \"#7B1DCA\" : \"#2CB9E1\";\n\n  if (!componentMounted) {\n    return <div/>;\n  }\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <Particles\n        className=\"particles\"\n        params={{\n          particles: {\n            number: {\n              value: 150,\n            },\n            line_linked: {\n              shadow: {\n                enable: true,\n                color: lineColor,\n                blur: 3,\n              },\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"grab\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"push\",\n              },\n            },\n          },\n        }}\n      />\n      <>\n        <GlobalStyles />\n        <Switch theme={theme} toggleTheme={toggleTheme} />\n        <div>\n          <BrowserRouter basename=\"/Stegano-Helper\">\n            <Router />\n          </BrowserRouter>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState(\"light\");\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setMode = (mode) => {\n    window.localStorage.setItem(\"theme\", mode);\n    setTheme(mode);\n  };\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      setMode(\"dark\");\n    } else {\n      setMode(\"light\");\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(\"theme\");\n    window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches &&\n    !localTheme\n      ? setMode(\"dark\")\n      : localTheme\n      ? setTheme(localTheme)\n      : setMode(\"light\");\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, toggleTheme, componentMounted];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* Vigenere encription & decription */\nvar string = require('./util/string')\n\nmodule.exports = {\n    /**\n     * Encrypts with formula : Ci = Pi + ki (mod 256)\n     * @param {String} plaintext\n     * @param {String} key\n     * @returns {String} - Ciphertext\n     */\n    encrypt: function(plaintext, key) {\n        // Convert string to ASCII\n        let P = plaintext;\n        let K = key;\n        if (K === \"\" || K === undefined) return P;\n\n        if (typeof plaintext == \"string\") P = string.toASCII(plaintext);\n\n        if (typeof key == \"string\") K = string.toASCII(key);\n\n\n        for (var i = 0; i < P.length; i++) {\n            P[i] = string.mod((P[i] + K[string.mod(i, K.length)]), 256);\n        }\n\n        return P;\n    },\n\n    /**\n     * Decrypts with formula : Pi = Ci - ki (mod 26)\n     * @param {String} ciphertext\n     * @param {String} key\n     * @returns {String} - Plaintext\n     */\n    decrypt : function(ciphertext, key) {\n        // Convert string to ASCII\n        let C = ciphertext;\n        let K = key;\n        if (K === \"\" || K === undefined) return C;\n\n        if (typeof ciphertext == \"string\") C = string.toASCII(ciphertext);\n\n        if (typeof key == \"string\") K = string.toASCII(key);\n\n        for (var i = 0; i < C.length; i++) {\n            C[i] = string.mod((C[i] - K[string.mod(i, K.length)]), 256);\n        }\n\n        return C;\n    }\n}","/* All string-related utility function is stored here */\nlet a = \"A\";\n\nmodule.exports = {\n    /**\n     * Check if input type is string\n     * @param {String} input\n     * @returns {Boolean}\n     */\n    isString: function(input) {\n        return ((typeof input) == \"string\");\n    },\n\n    /**\n     * Removes all non alphabet and capitalize each letters (including spaces & newlines)\n     * @param {String} input\n     * @returns {String}\n     */\n    removeNonAlphabet : function (input) {\n        return input.replace(/[^a-zA-Z]/gi, '').toUpperCase();\n    },\n\n    /**\n     * Removes all non alphabet and capitalize each letters (including spaces & newlines except '?')\n     * @param {String} input\n     * @returns {String}\n     */\n    removeNonAlphabetException: function (input) {\n        return input.replace(/[^a-zA-Z?]/gi, '').toUpperCase();\n    },\n\n    /**\n     * Removes all non alphabet and capitalize each letters (including spaces & newlines except '?' and '#)\n     * @param {String} input\n     * @returns {String}\n     */\n    removeNonAlphabetHill: function (input) {\n        return input.replace(/[^a-zA-Z?#]/gi, '').toUpperCase();\n    },\n\n    /**\n     * Removes all duplicate characters\n     * @param {String} input\n     * @returns {String}\n     */\n    removeDuplicates: function(input) {\n        return input.split('').filter(function (char, pos, self) {\n            return self.indexOf(char) === pos;\n        }).join('');\n    },\n\n    /**\n     * Replace all specific characters with another character\n     * @param {String} input\n     * @param {String} search\n     * @param {String} replace\n     * @returns {String}\n     */\n    replaceCharacters: function(input, search, replace) {\n        let regex = new RegExp(search, \"gi\");\n\n        return input.replace(regex, replace.toUpperCase());\n    },\n\n    /**\n     * Converts all alphabet to its order in alphabet (e.g. J -> 10)\n     * @param {String} input - All characters must be upper case alphabet\n     * @returns {Array} - Array of order numbers\n     */\n    toNumbers: function(input) {\n        input = this.removeNonAlphabet(input);\n\n        let out = [];\n\n        for (let i = 0; i < input.length; i++) {\n            out.push(input.charCodeAt(i) - a.charCodeAt(0));\n        }\n\n        return out;\n    },\n\n    /**\n     * Converts all alphabet to its order in alphabet (e.g. J -> 10)\n     * @param {String} input - All characters must be upper case alphabet\n     * @returns {Array} - Array of order numbers\n     */\n    toNumbersException: function(input) {\n        input = this.removeNonAlphabetException(input);\n\n        let out = [];\n\n        for (let i = 0; i < input.length; i++) {\n            out.push(input.charCodeAt(i) - a.charCodeAt(0));\n        }\n\n        return out;\n    },\n\n    /**\n     * Converts all number order in alphabet to alphabet with ? -> 27 (e.g. 10 -> J)\n     * @param {Array} input - Array of order numbers\n     * @returns {String}\n     */\n    toNumbersHill: function (input) {\n        input = this.removeNonAlphabetHill(input);\n\n        let out = [];\n\n        for (let i = 0; i < input.length; i++) {\n            if (input[i] === \"?\") {\n                out.push(26);\n            } else if (input[i] === \"#\") {\n                out.push(27);\n            } else {\n                out.push(input.charCodeAt(i) - a.charCodeAt(0));\n            }\n        }\n\n        return out;\n    },\n\n    /**\n     * Converts all alphabet to ASCII\n     * @param {String} input - All characters must be upper case alphabet\n     * @returns {Array} - Array of order numbers\n     */\n    toASCII: function(input) {\n        let out = [];\n\n        for (var i = 0; i < input.length; i++) {\n            out.push(input.charCodeAt(i));\n        }\n\n        return out;\n    },\n\n    /**\n     * Converts all number order in alphabet to alphabet (e.g. 10 -> J)\n     * @param {Array} input - Array of order numbers\n     * @returns {String}\n     */\n    toAlphabet: function(input) {\n        let out = \"\";\n\n        for (let i = 0; i < input.length; i++) {\n            if (input[i] === 63) {\n                out += String.fromCharCode(input[i]);\n            } else {\n                out += String.fromCharCode(input[i] + a.charCodeAt(0));\n            }\n        }\n\n        return out;\n    },\n\n    /**\n     * Converts all number order in alphabet to alphabet with 27 -> ? (e.g. 10 -> J)\n     * @param {Array} input - Array of order numbers\n     * @returns {String}\n     */\n    toAlphabetHill: function(input) {\n        let out = \"\";\n\n        for (let i = 0; i < input.length; i++) {\n            if (input[i] === 26) {\n                out += \"?\";\n            } else if (input[i] === 27) {\n                out += \"#\";\n            } else {\n                out += String.fromCharCode(input[i] + a.charCodeAt(0));\n            }\n        }\n\n        return out;\n    },\n\n    /**\n     * Mod operator (eg: mod(-10, 26) = 16)\n     * @param {Number} a\n     * @param {Number} b\n     * @returns {Number}\n     */\n    mod: function(a, b) {\n        let res = a % b;\n\n        return Math.floor(res >= 0 ? res : this.mod(a + b, b));\n    },\n\n\t/**\n     * Modular inverse (eg: modinv(7, 26) = 15)\n\t * @param {Number} m\n\t * @param {Number} n\n\t * @returns {Number}\n\t */\n    modInverse: function (m, n) {\n        // Find gcd\n        const s = [];\n        let b = n;\n\n        while (m < 0) m+=n;\n\n        while (b) {\n            [m, b] = [b, m % b];\n            s.push({ m, b });\n        }\n\n        // Find inverse\n        if (m !== 1) {\n            return NaN;\n        } else {\n            let x = 1;\n            let y = 0;\n\n            for (let i = s.length - 2; i >= 0; --i) {\n                [x, y] = [y, x - y * Math.floor(s[i].m / s[i].b)];\n            }\n\n            return (y % n + n) % n;\n        }\n\t},\n\n    /**\n     * Arrange sentence to bigram\n     * @param {String} input\n     * @returns {Array} - Array of alphabets in pair\n     */\n    bigram: function(input) {\n        input = this.removeNonAlphabet(input);\n\n        let pos = 0;\n        let tempDigram = \"\";\n        let out = [];\n\n        while (pos < input.length) {\n            if (tempDigram.length === 0) {\n                tempDigram += input.charAt(pos);\n            } else if (tempDigram.length === 1) {\n                if (tempDigram.charAt(0) === input.charAt(pos)) {\n                    tempDigram += \"X\";\n                    pos--; // Stay at current position\n                } else {\n                    tempDigram += input.charAt(pos);\n                    out.push(tempDigram);\n                    tempDigram = \"\";\n                }\n            } else {\n                out.push(tempDigram);\n                tempDigram = \"\";\n                tempDigram += input.charAt(pos);\n            }\n\n            // Check last bigram length\n            if ((input.length % 2) !== 0 && pos === (input.length - 1) && (tempDigram.length % 2) !== 0) {\n                tempDigram += \"X\";\n                out.push(tempDigram);\n            } else if (pos === (input.length - 1) && tempDigram.length !== 0) {\n                tempDigram = input.charAt(pos) + \"X\";\n                out.push(tempDigram);\n            }\n\n            pos++;\n        }\n\n        return out;\n    },\n\n    /**\n     * Splits the output into groups of n characters (n=5: ABCDEFG -> ABCDE FG)\n     * @param {String} input\n     * @returns {String}\n     */\n    formatOutput: function(input, n) {\n        let out = \"\";\n        for (let i=0; i<input.length; i+=n) {\n            out += input.substr(i, n) + \" \";\n        }\n        return out;\n    }\n}"],"sourceRoot":""}